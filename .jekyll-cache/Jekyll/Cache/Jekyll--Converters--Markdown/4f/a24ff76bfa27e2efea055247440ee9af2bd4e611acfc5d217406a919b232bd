I"e8<p>There comes a time in every developers life where you have to GET some data from an API endpoint, display it ever so lovingly on the world wide web and not freak out about it. This will be a series of short articles that will run you through the basics of getting data from an API. We will use the <a href="https://swapi.dev/">Star Wars API</a> and display that to the browser. I promise this article will be a blast.
The act of sending and receiving data over the web is known as an AJAX call. This allows browsers to send and retrieve information, that developers can manipulate to do many different things. There are five main HTTP methods to do this, GET, POST, PUT, PATCH, and DELETE. If you need a refresher the <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods">MDN docs</a> breaks down HTTP methods. This article will only focus on GET.
According to the MDN docs the GET method requests a representation of the specified resource. Requests using GET should only retrieve data.
This is a READ ONLY method and we have no risks of corrupting or mutating data. So let’s dive into using the Javascript Fetch() API to fetch some star wars data.
We want to get all of the Star Wars Movies according to the <a href="https://swapi.dev/documentation#films">Star Wars API Docs</a> we can call this:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"> <span class="kd">const</span> <span class="nx">baseURL</span> <span class="o">=</span> <span class="nx">https</span><span class="p">:</span><span class="c1">//swapi.dev/api/films/</span>

<span class="nx">fetch</span><span class="p">(</span><span class="nx">baseURL</span><span class="p">);</span> </code></pre></figure>

<p>Fetch will return a Promise. In order to do anything with what we fetched it needs to be written in a .then call which returns a promise:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">fetch</span><span class="p">(</span><span class="nx">baseURL</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">))</span></code></pre></figure>

<p>I wanted to console.log the response to show that fetch is responding back with an object..</p>

<p>{Response
body: ReadableStream
bodyUsed: false
headers: Headers {}
ok: true
redirected: false
status: 200
statusText: “”
type: “cors”
url: “https://swapi.dev/api/films/”
<strong>proto</strong>: Response
}</p>

<p>Well this is interesting.. How do we now get the data. We know from the Star Wars API docs that JSON is the standard data format provided by SWAPI by default. The Fetch .json method will convert to JSON!!</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">fetch</span><span class="p">(</span><span class="nx">baseURL</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">));</span></code></pre></figure>

<p>Oh Joy! We got our list of films. Let’s peek at the Console.</p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="err">count:</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w"> </span><span class="err">next:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="err">previous:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w"> </span><span class="err">results:</span><span class="w"> </span><span class="err">Array(</span><span class="mi">6</span><span class="err">)</span><span class="p">}</span><span class="w">
</span><span class="err">count:</span><span class="w"> </span><span class="mi">6</span><span class="w">
</span><span class="err">next:</span><span class="w"> </span><span class="kc">null</span><span class="w">
</span><span class="err">previous:</span><span class="w"> </span><span class="kc">null</span><span class="w">
</span><span class="err">results:</span><span class="w"> </span><span class="err">Array(</span><span class="mi">6</span><span class="err">)</span><span class="w">
</span><span class="mi">0</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="err">title:</span><span class="w"> </span><span class="s2">"A New Hope"</span><span class="p">,</span><span class="w"> </span><span class="err">episode_id:</span><span class="w"> </span><span class="mi">4</span><span class="p">,</span><span class="w"> </span><span class="err">opening_crawl:</span><span class="w"> </span><span class="s2">"It is a period of civil war.
↵Rebel spaceships, st…er
↵people and restore
↵freedom to the galaxy...."</span><span class="p">,</span><span class="w"> </span><span class="err">director:</span><span class="w"> </span><span class="s2">"George Lucas"</span><span class="p">,</span><span class="w"> </span><span class="err">producer:</span><span class="w"> </span><span class="s2">"Gary Kurtz, Rick McCallum"</span><span class="p">,</span><span class="w"> </span><span class="err">…</span><span class="p">}</span><span class="w">
</span><span class="mi">1</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="err">title:</span><span class="w"> </span><span class="s2">"The Empire Strikes Back"</span><span class="p">,</span><span class="w"> </span><span class="err">episode_id:</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w"> </span><span class="err">opening_crawl:</span><span class="w"> </span><span class="s2">"It is a dark time for the
↵Rebellion. Although the… remote probes into
↵the far reaches of space...."</span><span class="p">,</span><span class="w"> </span><span class="err">director:</span><span class="w"> </span><span class="s2">"Irvin Kershner"</span><span class="p">,</span><span class="w"> </span><span class="err">producer:</span><span class="w"> </span><span class="s2">"Gary Kurtz, Rick McCallum"</span><span class="p">,</span><span class="w"> </span><span class="err">…</span><span class="p">}</span><span class="w">
</span><span class="mi">2</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="err">title:</span><span class="w"> </span><span class="s2">"Return of the Jedi"</span><span class="p">,</span><span class="w"> </span><span class="err">episode_id:</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w"> </span><span class="err">opening_crawl:</span><span class="w"> </span><span class="s2">"Luke Skywalker has returned to
↵his home planet of…
↵struggling to restore freedom
↵to the galaxy..."</span><span class="p">,</span><span class="w"> </span><span class="err">director:</span><span class="w"> </span><span class="s2">"Richard Marquand"</span><span class="p">,</span><span class="w"> </span><span class="err">producer:</span><span class="w"> </span><span class="s2">"Howard G. Kazanjian, George Lucas, Rick McCallum"</span><span class="p">,</span><span class="w"> </span><span class="err">…</span><span class="p">}</span><span class="w">
</span><span class="mi">3</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="err">title:</span><span class="w"> </span><span class="s2">"The Phantom Menace"</span><span class="p">,</span><span class="w"> </span><span class="err">episode_id:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="err">opening_crawl:</span><span class="w"> </span><span class="s2">"Turmoil has engulfed the
↵Galactic Republic. The t…ustice in the
↵galaxy, to settle the conflict...."</span><span class="p">,</span><span class="w"> </span><span class="err">director:</span><span class="w"> </span><span class="s2">"George Lucas"</span><span class="p">,</span><span class="w"> </span><span class="err">producer:</span><span class="w"> </span><span class="s2">"Rick McCallum"</span><span class="p">,</span><span class="w"> </span><span class="err">…</span><span class="p">}</span><span class="w">
</span><span class="mi">4</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="err">title:</span><span class="w"> </span><span class="s2">"Attack of the Clones"</span><span class="p">,</span><span class="w"> </span><span class="err">episode_id:</span><span class="w"> </span><span class="mi">2</span><span class="p">,</span><span class="w"> </span><span class="err">opening_crawl:</span><span class="w"> </span><span class="s2">"There is unrest in the Galactic
↵Senate. Several t…THE REPUBLIC
↵to assist the overwhelmed
↵Jedi...."</span><span class="p">,</span><span class="w"> </span><span class="err">director:</span><span class="w"> </span><span class="s2">"George Lucas"</span><span class="p">,</span><span class="w"> </span><span class="err">producer:</span><span class="w"> </span><span class="s2">"Rick McCallum"</span><span class="p">,</span><span class="w"> </span><span class="err">…</span><span class="p">}</span><span class="w">
</span><span class="mi">5</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="err">title:</span><span class="w"> </span><span class="s2">"Revenge of the Sith"</span><span class="p">,</span><span class="w"> </span><span class="err">episode_id:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w"> </span><span class="err">opening_crawl:</span><span class="w"> </span><span class="s2">"War! The Republic is crumbling
↵under attacks by t…ate mission to rescue the
↵captive Chancellor...."</span><span class="p">,</span><span class="w"> </span><span class="err">director:</span><span class="w"> </span><span class="s2">"George Lucas"</span><span class="p">,</span><span class="w"> </span><span class="err">producer:</span><span class="w"> </span><span class="s2">"Rick McCallum"</span><span class="p">,</span><span class="w"> </span><span class="err">…</span><span class="p">}</span><span class="w">
</span><span class="err">length:</span><span class="w"> </span><span class="mi">6</span><span class="w">
</span><span class="err">__proto__:</span><span class="w"> </span><span class="err">Array(</span><span class="mi">0</span><span class="err">)</span><span class="w">
</span><span class="err">__proto__:</span><span class="w"> </span><span class="err">Object</span></code></pre></figure>

<p>Oh No! Did we do something wrong?!? Wait a second I see some movies in a field called results! Lets try this again..</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="cm">/* Let's use dot notation to get the results field */</span>
<span class="nx">fetch</span><span class="p">(</span><span class="nx">baseURL</span><span class="p">)</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">json</span><span class="p">())</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">results</span><span class="p">));</span></code></pre></figure>

<p>The results are in…</p>

<p>(6) [{…}, {…}, {…}, {…}, {…}, {…}]
0: {title: “A New Hope”, episode_id: 4, opening_crawl: “It is a period of civil war.
↵Rebel spaceships, st…er
↵people and restore
↵freedom to the galaxy….”, director: “George Lucas”, producer: “Gary Kurtz, Rick McCallum”, …}
1: {title: “The Empire Strikes Back”, episode_id: 5, opening_crawl: “It is a dark time for the
↵Rebellion. Although the… remote probes into
↵the far reaches of space….”, director: “Irvin Kershner”, producer: “Gary Kurtz, Rick McCallum”, …}
2: {title: “Return of the Jedi”, episode_id: 6, opening_crawl: “Luke Skywalker has returned to
↵his home planet of…
↵struggling to restore freedom
↵to the galaxy…”, director: “Richard Marquand”, producer: “Howard G. Kazanjian, George Lucas, Rick McCallum”, …}
3: {title: “The Phantom Menace”, episode_id: 1, opening_crawl: “Turmoil has engulfed the
↵Galactic Republic. The t…ustice in the
↵galaxy, to settle the conflict….”, director: “George Lucas”, producer: “Rick McCallum”, …}
4: {title: “Attack of the Clones”, episode_id: 2, opening_crawl: “There is unrest in the Galactic
↵Senate. Several t…THE REPUBLIC
↵to assist the overwhelmed
↵Jedi….”, director: “George Lucas”, producer: “Rick McCallum”, …}
5: {title: “Revenge of the Sith”, episode_id: 3, opening_crawl: “War! The Republic is crumbling
↵under attacks by t…ate mission to rescue the
↵captive Chancellor….”, director: “George Lucas”, producer: “Rick McCallum”, …}
length: 6
<strong>proto</strong>: Array(0)</p>

<p>Amazing and congrats! We are getting our films!! Now what?? We could do a forEach() on that Array and display it or go next level. The Star Wars API gives us the ability to use search with our params. Next article we will wire up a form, use the user input as a search param, use that forEach() on results and attempt to display an GET request from the Star Wars API!
Until the next time we kick it together…</p>
:ET